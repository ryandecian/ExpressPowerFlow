/* Import des Types : */
import type { MqttClientStatus_Type } from "../types/mqtt/mqttClientStatus.type.js";

function getStatus_MQTT(status: MqttClientStatus_Type): Readonly<MqttClientStatus_Type> {
    return status;
}

export { getStatus_MQTT };

/* ============================================================================
   ğŸ§  Documentation : getStatus_MQTT
   ----------------------------------------------------------------------------
   Nom du composant : getStatus_MQTT
   RÃ´le :
       - Cette fonction retourne lâ€™Ã©tat complet du client MQTT
         sous une forme en lecture seule (immutable).
       - Elle permet Ã  dâ€™autres parties du code (contrÃ´leurs, middlewares, etc.)
         de consulter lâ€™Ã©tat actuel du client MQTT sans risquer
         de le modifier accidentellement.

   ParamÃ¨tres :
       - status (MqttClientStatus_Type)
           â†’ Objet reprÃ©sentant lâ€™Ã©tat interne du client MQTT.
             Contient plusieurs propriÃ©tÃ©s clÃ©s :
                 connected: boolean
                 reconnecting: boolean
                 lastError?: string
                 url: string
                 clientId: string

   Retour :
       - (Readonly<MqttClientStatus_Type>)
           â†’ Retourne lâ€™objet status complet, protÃ©gÃ© contre toute modification.
             Toute tentative dâ€™Ã©criture lÃ¨vera une erreur en mode strict.

   Utilisation typique :
       const currentStatus = getStatus_MQTT(status);
       console.log(currentStatus.connected); // â†’ true / false

   Avantages :
       âœ… Fournit un accÃ¨s sÃ»r et transparent Ã  lâ€™Ã©tat MQTT
       âœ… EmpÃªche toute modification non voulue de lâ€™Ã©tat interne
       âœ… Facilite la lecture des informations dans le reste du code (logs, debug, API)

   Ã€ savoir :
       - Cette fonction ne crÃ©e pas de copie ; elle renvoie une rÃ©fÃ©rence
         protÃ©gÃ©e (en lecture seule) de lâ€™objet status actuel.
       - Elle nâ€™effectue aucune opÃ©ration asynchrone : lecture instantanÃ©e.

   ========================================================================= */
