version: "3.9"

services:
  nginx:
    image: nginx:1.27-alpine
    container_name: epf_nginx
    depends_on:
      - server
    ports:
      - "60500:80"   # DSM fera 443 -> 60500 pour le front
    volumes:
      - /volume1/docker/ExpressPowerFlow/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /volume1/docker/ExpressPowerFlow/client-dist:/usr/share/nginx/html:ro
      - /volume1/docker/ExpressPowerFlow/logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - epf_net

  db:
    image: mariadb:11
    container_name: epf_db
    restart: always
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=Europe/Paris
    volumes:
      - db_data:/var/lib/mysql
      - /volume1/docker/ExpressPowerFlow/logs/db:/var/log/mysql
    expose:
      - "3306"  # seulement accessible entre services Docker
    # DEV uniquement : accès externe
    ports:
      - "4406:3306"
    networks:
      - epf_net

  server:
    image: node:22-alpine
    container_name: epf_server
    restart: always
    ports:
      - "7080:7080"     # DSM proxy: 443 -> 7080 pour l'API
    working_dir: /app
    env_file: .env
    environment:
      - NODE_ENV=production
      - TZ=Europe/Paris

      # Domaines
      - VITE_DOMAIN_CLIENT=${VITE_DOMAIN_CLIENT}
      - VITE_DOMAIN_API_SERVER=${VITE_DOMAIN_API_SERVER}

      # Ports hors DB
      - VITE_PORT_API_SERVER=${VITE_PORT_API_SERVER} # Port interne docker. Le port externe dépend du reverse proxy

      # Variables de connexion DB
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

      # Variables de connexion au service gmail
      - MAIL_SERVER_ADMIN=${MAIL_SERVER_ADMIN}
      - MAIL_PASSWORD=${MAIL_PASSWORD}

      # Clés secrètes pour JWT
      - SECRET_KEY_TOKEN_CLIENT=${SECRET_KEY_TOKEN_CLIENT}
      - SECRET_KEY_TOKEN_API_SERVER=${SECRET_KEY_TOKEN_API_SERVER}
    volumes:
      - /volume1/docker/ExpressPowerFlow/server-dist:/app/dist:ro
      - /volume1/docker/ExpressPowerFlow/server/uploads:/app/uploads
      - /volume1/docker/ExpressPowerFlow/logs/server:/app/logs
    depends_on:
      - db
    networks:
      - epf_net
    command: >
      sh -c "
      node --version &&
      node dist/index.js
      "

volumes:
  db_data:

networks:
  epf_net:
    driver: bridge
