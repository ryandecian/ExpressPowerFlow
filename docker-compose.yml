version: "3.8"

services:
  nginx:
    image: nginx:1.27-alpine
    container_name: epf_nginx
    depends_on:
      - client
      - server
    ports:
      - "60500:80"   # Uniquement interne au NAS; DSM fera 443 -> 60500
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - client-dist:/usr/share/nginx/html:ro  # Sert le build du front
    restart: unless-stopped
    networks:
      - epf_net

  db:
    image: mariadb:11
    container_name: epf_db
    restart: always
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    # Exposition du port vers les services internes de docker
    expose:
      - "3306"  # seulement accessible entre services Docker (sécurité)
    # Exposition de la DB vers l'extérieur en dehors de Docker
    ports:
      - "4406:3306"  # DB accessible depuis l'extérieur le temps du dev
    networks:
      - epf_net

  client:
    container_name: epf_client
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - VITE_NODE_ENV=production
        - VITE_DOMAIN_CLIENT=${VITE_DOMAIN_CLIENT}
        - VITE_DOMAIN_API_SERVER=${VITE_DOMAIN_API_SERVER}
    env_file: .env
    restart: "no"
    volumes:
      - client-dist:/app/dist   # Le build Vite est placé ici puis servi par NGINX
    command: [ "sh", "-c", "npm ci && npm run build && sleep infinity" ]
    networks:
      - epf_net

  server:
    container_name: epf_server
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    restart: always
    expose:
      - "7080"     # visible seulement sur le réseau Docker
    environment:
      - NODE_ENV=production
      - VITE_DOMAIN_CLIENT=${VITE_DOMAIN_CLIENT}
      - VITE_DOMAIN_API_SERVER=${VITE_DOMAIN_API_SERVER}
      - VITE_PORT_API_SERVER=${VITE_PORT_API_SERVER}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - MAIL_SERVER_ADMIN=${MAIL_SERVER_ADMIN}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SECRET_KEY_TOKEN_CLIENT=${SECRET_KEY_TOKEN_CLIENT}
      - SECRET_KEY_TOKEN_API_SERVER=${SECRET_KEY_TOKEN_API_SERVER}
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - epf_net
    depends_on:
      - db

volumes:
  db_data:
  client-dist:

networks:
  epf_net:
    driver: bridge
