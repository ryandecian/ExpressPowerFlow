# ✨ Active les événements de gestion de connexions
events {}

# 🌐 Configuration principale du serveur HTTP
http {
  # 📦 Charge les types MIME standards (pour que Nginx comprenne .js, .css, etc.)
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # ⚙️ I/O & perf
  sendfile             on;
  tcp_nopush           on;
  tcp_nodelay          on;
  keepalive_timeout    65;
  server_tokens        off;

  # 📥 Taille max d’upload (si ton API reçoit des fichiers via /api)
  client_max_body_size 50m;

  # 🌐 Déclare l’upstream backend (ton serveur Express dans Docker)
  upstream backend_epf {
    server epf_server:7080;
    keepalive 32;
  }

  # ---------------------------------------------
  # 🌐 1. Compression GZIP pour tous les fichiers textes
  # ---------------------------------------------
  gzip on;  # ✅ Active la compression
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    application/xml+rss
    image/svg+xml;  # ⚠️ Vite produit souvent des SVG
  gzip_min_length 256;  # Ne compresse que si > 256 octets
  gzip_vary on;         # Ajoute l'en-tête Vary pour le cache/CDN
  gzip_proxied any;     # Autorise compression même derrière un proxy
  gzip_comp_level 6;    # Bon compromis entre perf & compression

  # ---------------------------------------------
  # 🧠 2. Cache côté client pour les fichiers statiques (HTML, JS, CSS, etc.)
  #    N.B. DSM termine le TLS et peut ajouter HSTS/CSP au besoin.
  # ---------------------------------------------
  # On sert un cache longue durée pour les assets fingerprintés (Vite),
  # mais JAMAIS pour index.html.
  map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;  # pas de cache pour l'HTML
    text/css                   max;
    application/javascript     max;
    application/json           max;
    image/svg+xml              max;
    font/woff2                 max;
  }

  # ⚠️ Ici PAS de redirection HTTP→HTTPS ni de blocs SSL :
  # DSM (Reverse Proxy) reçoit en 443 et re-proxifie en HTTP vers ce Nginx.

  # ---------------------------------------------
  # 🌐 3. VHOST FRONTEND — app.expresspowerflow.decian.ddnsfree.com
  # ---------------------------------------------
  server {
    listen 80;
    server_name expresspowerflow.decian.ddnsfree.com;

    # 🗂️ Sert les fichiers du build React (montés par le volume client-dist)
    root /usr/share/nginx/html;
    index index.html;

    # 🧠 Cache agressif pour assets (hashés) — pas pour index.html
    location ~* \.(?:js|mjs|css|woff2?|ttf|eot|ico|svg|png|jpe?g|gif)$ {
      access_log off;
      expires $expires;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # ✅ SPA fallback : index.html si chemin inconnu
    location / {
      try_files $uri /index.html;
      expires $expires;
      add_header Cache-Control "no-store";
    }

    # 🔒 Petits headers sûreté (le gros HSTS/CSP peut être géré par DSM)
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header X-Frame-Options SAMEORIGIN always;
  }

  # ---------------------------------------------
  # 🌐 4. VHOST API — api.expresspowerflow.decian.ddnsfree.com
  # ---------------------------------------------
  server {
    listen 80;
    server_name api.expresspowerflow.decian.ddnsfree.com;

    # 📡 Proxy vers le serveur backend
    location / {
      proxy_pass         http://backend_epf/;
      proxy_http_version 1.1;

      # 🔁 Forward des headers utiles
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;

      # (optionnel) WebSocket si besoin
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;

      # (optionnel) timeouts raisonnables
      proxy_connect_timeout   5s;
      proxy_send_timeout     60s;
      proxy_read_timeout     60s;
    }

    # ❌ Pas de cache pour l'API
    add_header Cache-Control "no-store";
  }

  # (Optionnel) variable utile pour Upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }
}
